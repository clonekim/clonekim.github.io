<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Ruby on (fn [] &#34;Less is more&#34;)</title>
    <link>http://clonekim.github.io/tags/ruby/</link>
    <description>Recent content in Ruby on (fn [] &#34;Less is more&#34;)</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ko</language>
    <lastBuildDate>Fri, 03 Feb 2012 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="http://clonekim.github.io/tags/ruby/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Ruby Some Basic</title>
      <link>http://clonekim.github.io/2012/02/ruby-some-basic/</link>
      <pubDate>Fri, 03 Feb 2012 00:00:00 +0000</pubDate>
      
      <guid>http://clonekim.github.io/2012/02/ruby-some-basic/</guid>
      <description>json 생성
require &amp;#39;json&amp;#39; jsonbody = JSON.generate[&amp;#34;message&amp;#34;=&amp;gt;&amp;#34;test&amp;#34;,&amp;#34;user&amp;#34;=&amp;gt;&amp;#34;user1&amp;#34;] rest-client을 이용한 예제
require &amp;#39;rubygems&amp;#39; require &amp;#39;rest_client&amp;#39; require &amp;#39;json&amp;#39; jdata = JSON.generate([&amp;#34;test&amp;#34;]) RestClient.put &amp;#39;http://localhost:4567/users/123&amp;#39;, jdata, {:content_type =&amp;gt; :json} Net:HTTP GET/PUT
require &amp;#39;net/http&amp;#39; http = Net::HTTP.new(&amp;#39;www.data.com&amp;#39;) response = http.request_put(&amp;#39;/?access_token=123&amp;#39;, jsonbody)url = URI.parse(&amp;#39;http://localhost:3000/someservice/&amp;#39;) request = Net::HTTP::Post.new(url.path) request.body = &amp;#34;&amp;lt;?xml version=&amp;#39;1.0&amp;#39; encoding=&amp;#39;UTF-8&amp;#39;?&amp;gt;&amp;lt;somedata&amp;gt;&amp;lt;name&amp;gt;Test Name 1&amp;lt;/name&amp;gt;&amp;lt;description&amp;gt;Some data for Unit testing&amp;lt;/description&amp;gt;&amp;lt;/somedata&amp;gt;&amp;#34; response = Net::HTTP.start(url.host, url.port) {|http| http.request(request)} #Note this test PASSES! assert_equal &amp;#39;201 Created&amp;#39;, response.get_fields(&amp;#39;Status&amp;#39;)[0]require &amp;#39;net/http&amp;#39; require &amp;#39;uri&amp;#39; type = &amp;#39;record&amp;#39; activity = &amp;#39;query-data&amp;#39; xml_req =&amp;lt;&amp;lt;EOF &amp;lt;?</description>
    </item>
    
  </channel>
</rss>