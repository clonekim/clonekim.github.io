<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Javascript on (fn [] &#34;Less is more&#34;)</title>
    <link>http://clonekim.github.io/tags/javascript/</link>
    <description>Recent content in Javascript on (fn [] &#34;Less is more&#34;)</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ko</language>
    <lastBuildDate>Tue, 03 Feb 2015 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="http://clonekim.github.io/tags/javascript/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>beefy 팁</title>
      <link>http://clonekim.github.io/2015/02/beefy-%ED%8C%81/</link>
      <pubDate>Tue, 03 Feb 2015 00:00:00 +0000</pubDate>
      
      <guid>http://clonekim.github.io/2015/02/beefy-%ED%8C%81/</guid>
      <description>a local development server designed to work with browserify.
 can live reload your browser when your code changes (if you want) works with whatever version of browserify or watchify; globally installed or locally installed to node_modules/. will spit compile errors out into the browser so you don&amp;rsquo;t have that 1-2 seconds of cognitive dissonance and profound ennui that follows refreshing the page only to get a blank screen. will spit out a default index.</description>
    </item>
    
    <item>
      <title>RequireJS 예제</title>
      <link>http://clonekim.github.io/2014/12/requirejs-%EC%98%88%EC%A0%9C/</link>
      <pubDate>Mon, 29 Dec 2014 00:00:00 +0000</pubDate>
      
      <guid>http://clonekim.github.io/2014/12/requirejs-%EC%98%88%EC%A0%9C/</guid>
      <description>RequireJS
log라는 모듈을 작성한다
log.js
define(&#39;log&#39;, function() { return function(str) { console.log(&amp;quot;--&amp;gt; &amp;quot;, str); } });  &amp;lt;!DOCTYPE html&amp;gt; &amp;lt;html lang=&amp;quot;ko&amp;quot;&amp;gt; &amp;lt;head&amp;gt; &amp;lt;script src=&amp;quot;requirejs/2.1.15/require.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt; &amp;lt;script src=&amp;quot;js/log.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt; &amp;lt;/head&amp;gt; &amp;lt;body&amp;gt; &amp;lt;script&amp;gt; require([&#39;log&#39;], function(log) { log(&amp;quot;Hello !&amp;quot;); }); &amp;lt;/script&amp;gt; &amp;lt;/body&amp;gt; &amp;lt;/html&amp;gt;  프로토타입으로 작성한 boost.js
define(&#39;boost&#39;, function() { function Boost() { } Boost.prototype.version = function() { return &amp;quot;1.0&amp;quot;; }; return Boost; });  &amp;lt;!DOCTYPE html&amp;gt; &amp;lt;html lang=&amp;quot;ko&amp;quot;&amp;gt; &amp;lt;head&amp;gt; &amp;lt;script src=&amp;quot;requirejs/2.1.15/require.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt; &amp;lt;script src=&amp;quot;js/boost.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt; &amp;lt;script&amp;gt; require([&#39;boost&#39;], function(Boost) { var boost = new Boost(); alert(boost.</description>
    </item>
    
    <item>
      <title>자바스크립트로 UUID 생성</title>
      <link>http://clonekim.github.io/2014/03/%EC%9E%90%EB%B0%94%EC%8A%A4%ED%81%AC%EB%A6%BD%ED%8A%B8%EB%A1%9C-uuid-%EC%83%9D%EC%84%B1/</link>
      <pubDate>Sun, 02 Mar 2014 00:00:00 +0000</pubDate>
      
      <guid>http://clonekim.github.io/2014/03/%EC%9E%90%EB%B0%94%EC%8A%A4%ED%81%AC%EB%A6%BD%ED%8A%B8%EB%A1%9C-uuid-%EC%83%9D%EC%84%B1/</guid>
      <description>RFC4122
return &#39;xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx&#39;.replace(/[xy]/g, function(c) { var r = Math.random()*16|0, v = c === &#39;x&#39; ? r : (r&amp;amp;0x3|0x8); return v.toString(16); });  var s = []; var hexDigits = &amp;quot;0123456789abcdef&amp;quot;; for (var i = 0; i &amp;lt; 36; i++) { s[i] = hexDigits.substr(Math.floor(Math.random() * 0x10), 1); } s[14] = &amp;quot;4&amp;quot;; s[19] = hexDigits.substr((s[19] &amp;amp; 0x3) | 0x8, 1); s[8] = s[13] = s[18] = s[23] = &amp;quot;-&amp;quot;; var uuid = s.</description>
    </item>
    
    <item>
      <title>JavaScript 개발팁</title>
      <link>http://clonekim.github.io/2013/10/javascript-%EA%B0%9C%EB%B0%9C%ED%8C%81/</link>
      <pubDate>Thu, 10 Oct 2013 00:00:00 +0000</pubDate>
      
      <guid>http://clonekim.github.io/2013/10/javascript-%EA%B0%9C%EB%B0%9C%ED%8C%81/</guid>
      <description>Module Pattern
로직과 private 변수를 캡슐화하는 방법으로 아래와 같은 모듈패턴( 익명함수) 을 많이 사용한다.
(function() { /* ... */ })();  jQuery와 연동해서 사용할 경우 아래와 같이 파라미터를 전달하도록 한다.
(function($) { /* ... */ })(jQuery);  글로벌 변수를 전달해서 네임스페이스로 확장 할 수 있다.
(function($, exports) { exports.Foo = &amp;quot;wem&amp;quot;; })(jQuery, window);  IIFE(mmediately-Invoked Function Expression)
(function() { var mod = {}; })();  window라는 식별자를 거치지 않고 전역변수를 접근하자</description>
    </item>
    
  </channel>
</rss>